import logging
import telebot
from dotenv import load_dotenv
import os
from libs import db
from libs import get_all

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.DEBUG,  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    handlers=[
        logging.FileHandler("bot.log"),  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
        logging.StreamHandler()  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)

logger = logging.getLogger(__name__)

db_path = "storage/db.db"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
tg_token = os.getenv("telegram_token")
logger.info("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω.")

bot = telebot.TeleBot(tg_token)
logger.info("–ë–æ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω.")

@bot.message_handler(commands=["start", "Start"])
def start(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}.")
    check = db.get_data(db_path, "SELECT tg_id FROM main WHERE tg_id = ?", (message.from_user.id,))
    if check is None:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—é –∑–∞–ø–∏—Å—å.")
        db.execute_request(db_path, "INSERT INTO main (tg_id, city) VALUES (?, ?)", (message.from_user.id, "not_set"))
    else:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–æ–≥–∞—é.")
    bot.send_message(message.chat.id, "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç! –Ø —Ä–∞—Å—Å–∫–∞–∂—É –≤–∞–º –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. ‚òÄÔ∏è")
    bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∫–æ–º–∞–Ω–¥–æ–π /set_city –∏–ª–∏, –µ—Å–ª–∏ –≤—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ –≥–æ—Ä–æ–¥, –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –∫–æ–º–∞–Ω–¥–æ–π /weather.")

@bot.message_handler(commands=["help", "Help"])
def help_command(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}.")
    bot.send_message(message.chat.id, "üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã:\n/start - –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. üëã\n/set_city - –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ–¥. üåç\n/weather - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. üå¶Ô∏è\n/help - –í—ã–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. üìú")
@bot.message_handler(commands=["set_city"])
def set_city(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /set_city –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}.")
    check = db.get_data(db_path, "SELECT tg_id FROM main WHERE tg_id = ?", (message.from_user.id,))  
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = telebot.types.KeyboardButton("üìç –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥.", request_location=True)
    keyboard.add(button)

    if check is None:
        bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –µ—â—ë –Ω–µ —Å—Ç–∞–≤–∏–ª–∏ –≥–æ—Ä–æ–¥, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≥–æ—Ä–æ–¥.", reply_markup=keyboard)
    else:
        city_target = db.get_data(db_path, "SELECT city FROM main WHERE tg_id =?", (message.from_user.id,))
        if city_target != "not_set":
            bot.send_message(message.chat.id, f"üåÜ –£ –≤–∞—Å —Å—Ç–æ–∏—Ç –≥–æ—Ä–æ–¥: {city_target}. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ –ø–æ–º–µ–Ω—è—Ç—å –≥–æ—Ä–æ–¥.", reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –µ—â—ë –Ω–µ —Å—Ç–∞–≤–∏–ª–∏ –≥–æ—Ä–æ–¥, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≥–æ—Ä–æ–¥.", reply_markup=keyboard)

@bot.message_handler(content_types=["location"])
def city_update(message):
    try:
        lat = message.location.latitude
        lon = message.location.longitude
        city = get_all.get_city(lat, lon)
        bot.send_message(message.chat.id, f"üèôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–æ—Ä–æ–¥: {city}", reply_markup=telebot.types.ReplyKeyboardRemove())
        logger.info(f"–Æ–∑–µ—Ä {message.from_user.id} —Å–º–µ–Ω–∏–ª –≥–æ—Ä–æ–¥ –Ω–∞ {city}.")
        db.execute_request(db_path, "UPDATE main SET city = ? WHERE tg_id = ?", (city, message.from_user.id,))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
@bot.message_handler(commands=["weather"])
def weather(message):
    try:
        deleteneg = bot.send_message(message.chat.id, "‚è≥ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –ø–æ–≥–æ–¥—É...")
        city_target = db.get_data(db_path, "SELECT city FROM main WHERE tg_id = ?", (message.from_user.id,))

        if city_target is None or city_target == "not_set":
            bot.send_message(message.chat.id, "üö´ –ì–æ—Ä–æ–¥ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /set_city.")
            return

        weather = get_all.get_weather(city_target)
        bot.send_message(message.chat.id, f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city_target}:")
        bot.send_message(
            message.chat.id,
            text=(
                f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather[0]['temp']}¬∞C\n"
                f"üí® –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather[0]['feels_like']}¬∞C\n"
                f"üìâ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather[0]['temp_min']}¬∞C\n"
                f"üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather[0]['temp_max']}¬∞C\n"
                f"üíß –î–∞–≤–ª–µ–Ω–∏–µ: {weather[0]['pressure']} –º–º —Ä—Ç. —Å—Ç.\n"
                f"üå¨Ô∏è –í–µ—Ç–µ—Ä: {weather[1]['speed']} –º/—Å"
            )
        )
        bot.delete_message(message.chat.id, deleteneg.id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@bot.message_handler(commands=["autor"])
def autor(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /autor –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}.")
    bot.send_message(message.chat.id, "üë§ –ú–µ–Ω—è —Å–æ–∑–¥–∞–ª: kos000113\nTelegram: @kos000113\nGithub: https://github.com/kostya2023/telegram_weather_bot\nDonation Alerts: https://www.donationalerts.com/r/kostyagot")

if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.")
    bot.infinity_polling()
